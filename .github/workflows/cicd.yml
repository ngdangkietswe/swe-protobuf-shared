name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  build-test-commit:
    name: Build, Test, and Commit Changes
    runs-on: ubuntu-latest

    outputs:
      DURATION: ${{ steps.build_duration.outputs.duration }}
      COMMIT_SHA: ${{ steps.commit_sha.outputs.sha_short }}

    steps:
      - name: Calculate build start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Install make (if not cached)
        run: |
          if ! command -v make &> /dev/null; then
            echo "Installing make..."
            sudo apt-get update
            sudo apt-get install -y make
          else
            echo "Make is already installed and cached."
          fi

      - name: Configure Maven for GitHub Packages
        run: |
          mkdir -p ~/.m2
          echo '<settings xmlns="https://maven.apache.org/SETTINGS/1.0.0" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
          xsi:schemaLocation="https://maven.apache.org/SETTINGS/1.0.0 
          https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github-protobuf-shared</id>
                <username>ngdangkietswe</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>' > ~/.m2/settings.xml

      - name: Generate Java Code and Publish Dependencies
        run: mvn -T 1C clean install deploy -Dmaven.test.skip -DskipTests

      - name: Generate Go Code
        run: |
          make update
          make gen-go

      - name: Generate SHA short
        id: commit_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        run: |
          git config --global user.name "ngdangkietse"
          git config --global user.email "kietnguyen17052001@gmail.com"
          sudo chown $USER:$USER buf.lock
          sudo chown -R $USER:$USER ./generated
          chmod -R u+w .
          if [ -n "$(git status -s)" ]; then
            git status
            git add .
            git commit -m "chore: regenerate files"
            git pull --rebase origin main
            git push origin main
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # After successful build, trigger the workflow in swe-grpc-gateway
      - name: Trigger workflow in swe-grpc-gateway
        run: |
          curl -X POST \
            https://api.github.com/repos/ngdangkietswe/swe-grpc-gateway/dispatches \
            -H "Authorization: Bearer ${{ secrets.PAT }}" \
            -d '{"event_type": "trigger-swe-grpc-gateway"}'

      - name: Calculate build duration
        id: build_duration
        run: |
          START_TIME=${{ env.START_TIME }}
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          echo "duration=$DURATION" >> $GITHUB_OUTPUT
          echo "âœ… Build took $DURATION seconds."

  push-notification-to-slack:
    name: Slack Notification
    needs: build-test-commit
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Push Notification to Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*:white_check_mark: Succeeded GitHub Actions*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Repo*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Commit*\n<${{ github.event.head_commit.url }}|${{ needs.build-test-commit.outputs.COMMIT_SHA }}>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*\n${{ github.event.head_commit.author.name }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job*\n`${{ github.job }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Event Name*\n`${{ github.event_name }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow*\n`${{ github.workflow }}`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Build Logs*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Took*\n`${{ needs.build-test-commit.outputs.DURATION }} sec`"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Message*\n${{ github.event.head_commit.message }}"
                    }
                  ]
                }
              ]
            }