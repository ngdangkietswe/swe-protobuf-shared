// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: timetracking/shared.proto

package timetracking

import (
	common "github.com/ngdangkietswe/swe-protobuf-shared/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeTrackingStatus int32

const (
	TimeTrackingStatus_STATUS_UNSPECIFIED       TimeTrackingStatus = 0
	TimeTrackingStatus_STATUS_NOT_CHECKED_IN    TimeTrackingStatus = 1
	TimeTrackingStatus_STATUS_CHECKED_IN        TimeTrackingStatus = 2
	TimeTrackingStatus_STATUS_CHECKED_IN_LATE   TimeTrackingStatus = 3
	TimeTrackingStatus_STATUS_CHECKED_OUT       TimeTrackingStatus = 4
	TimeTrackingStatus_STATUS_CHECKED_OUT_EARLY TimeTrackingStatus = 5
)

// Enum value maps for TimeTrackingStatus.
var (
	TimeTrackingStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_NOT_CHECKED_IN",
		2: "STATUS_CHECKED_IN",
		3: "STATUS_CHECKED_IN_LATE",
		4: "STATUS_CHECKED_OUT",
		5: "STATUS_CHECKED_OUT_EARLY",
	}
	TimeTrackingStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED":       0,
		"STATUS_NOT_CHECKED_IN":    1,
		"STATUS_CHECKED_IN":        2,
		"STATUS_CHECKED_IN_LATE":   3,
		"STATUS_CHECKED_OUT":       4,
		"STATUS_CHECKED_OUT_EARLY": 5,
	}
)

func (x TimeTrackingStatus) Enum() *TimeTrackingStatus {
	p := new(TimeTrackingStatus)
	*p = x
	return p
}

func (x TimeTrackingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeTrackingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_timetracking_shared_proto_enumTypes[0].Descriptor()
}

func (TimeTrackingStatus) Type() protoreflect.EnumType {
	return &file_timetracking_shared_proto_enumTypes[0]
}

func (x TimeTrackingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeTrackingStatus.Descriptor instead.
func (TimeTrackingStatus) EnumDescriptor() ([]byte, []int) {
	return file_timetracking_shared_proto_rawDescGZIP(), []int{0}
}

type TimeTracking struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                                       // YYYY-MM-DD
	CheckInTime   string                 `protobuf:"bytes,4,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`    // HH:mm:ss
	CheckOutTime  string                 `protobuf:"bytes,5,opt,name=check_out_time,json=checkOutTime,proto3" json:"check_out_time,omitempty"` // HH:mm:ss
	Status        TimeTrackingStatus     `protobuf:"varint,6,opt,name=status,proto3,enum=timetracking.TimeTrackingStatus" json:"status,omitempty"`
	IsOvertime    bool                   `protobuf:"varint,7,opt,name=is_overtime,json=isOvertime,proto3" json:"is_overtime,omitempty"`
	OvertimeHours float64                `protobuf:"fixed64,8,opt,name=overtime_hours,json=overtimeHours,proto3" json:"overtime_hours,omitempty"`
	Latitude      float64                `protobuf:"fixed64,9,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,10,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Location      string                 `protobuf:"bytes,11,opt,name=location,proto3" json:"location,omitempty"`
	Audit         *common.Audit          `protobuf:"bytes,12,opt,name=audit,proto3" json:"audit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeTracking) Reset() {
	*x = TimeTracking{}
	mi := &file_timetracking_shared_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeTracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeTracking) ProtoMessage() {}

func (x *TimeTracking) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_shared_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeTracking.ProtoReflect.Descriptor instead.
func (*TimeTracking) Descriptor() ([]byte, []int) {
	return file_timetracking_shared_proto_rawDescGZIP(), []int{0}
}

func (x *TimeTracking) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TimeTracking) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TimeTracking) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TimeTracking) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *TimeTracking) GetCheckOutTime() string {
	if x != nil {
		return x.CheckOutTime
	}
	return ""
}

func (x *TimeTracking) GetStatus() TimeTrackingStatus {
	if x != nil {
		return x.Status
	}
	return TimeTrackingStatus_STATUS_UNSPECIFIED
}

func (x *TimeTracking) GetIsOvertime() bool {
	if x != nil {
		return x.IsOvertime
	}
	return false
}

func (x *TimeTracking) GetOvertimeHours() float64 {
	if x != nil {
		return x.OvertimeHours
	}
	return 0
}

func (x *TimeTracking) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *TimeTracking) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *TimeTracking) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *TimeTracking) GetAudit() *common.Audit {
	if x != nil {
		return x.Audit
	}
	return nil
}

var File_timetracking_shared_proto protoreflect.FileDescriptor

const file_timetracking_shared_proto_rawDesc = "" +
	"\n" +
	"\x19timetracking/shared.proto\x12\ftimetracking\x1a\x13common/shared.proto\"\x92\x03\n" +
	"\fTimeTracking\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\x12\"\n" +
	"\rcheck_in_time\x18\x04 \x01(\tR\vcheckInTime\x12$\n" +
	"\x0echeck_out_time\x18\x05 \x01(\tR\fcheckOutTime\x128\n" +
	"\x06status\x18\x06 \x01(\x0e2 .timetracking.TimeTrackingStatusR\x06status\x12\x1f\n" +
	"\vis_overtime\x18\a \x01(\bR\n" +
	"isOvertime\x12%\n" +
	"\x0eovertime_hours\x18\b \x01(\x01R\rovertimeHours\x12\x1a\n" +
	"\blatitude\x18\t \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\n" +
	" \x01(\x01R\tlongitude\x12\x1a\n" +
	"\blocation\x18\v \x01(\tR\blocation\x12#\n" +
	"\x05audit\x18\f \x01(\v2\r.common.AuditR\x05audit*\xb0\x01\n" +
	"\x12TimeTrackingStatus\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15STATUS_NOT_CHECKED_IN\x10\x01\x12\x15\n" +
	"\x11STATUS_CHECKED_IN\x10\x02\x12\x1a\n" +
	"\x16STATUS_CHECKED_IN_LATE\x10\x03\x12\x16\n" +
	"\x12STATUS_CHECKED_OUT\x10\x04\x12\x1c\n" +
	"\x18STATUS_CHECKED_OUT_EARLY\x10\x05B\xb4\x01\n" +
	"\x10com.timetrackingB\vSharedProtoP\x01ZCgithub.com/ngdangkietswe/swe-protobuf-shared/generated/timetracking\xa2\x02\x03TXX\xaa\x02\fTimetracking\xca\x02\fTimetracking\xe2\x02\x18Timetracking\\GPBMetadata\xea\x02\fTimetrackingb\x06proto3"

var (
	file_timetracking_shared_proto_rawDescOnce sync.Once
	file_timetracking_shared_proto_rawDescData []byte
)

func file_timetracking_shared_proto_rawDescGZIP() []byte {
	file_timetracking_shared_proto_rawDescOnce.Do(func() {
		file_timetracking_shared_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_timetracking_shared_proto_rawDesc), len(file_timetracking_shared_proto_rawDesc)))
	})
	return file_timetracking_shared_proto_rawDescData
}

var file_timetracking_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_timetracking_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_timetracking_shared_proto_goTypes = []any{
	(TimeTrackingStatus)(0), // 0: timetracking.TimeTrackingStatus
	(*TimeTracking)(nil),    // 1: timetracking.TimeTracking
	(*common.Audit)(nil),    // 2: common.Audit
}
var file_timetracking_shared_proto_depIdxs = []int32{
	0, // 0: timetracking.TimeTracking.status:type_name -> timetracking.TimeTrackingStatus
	2, // 1: timetracking.TimeTracking.audit:type_name -> common.Audit
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_timetracking_shared_proto_init() }
func file_timetracking_shared_proto_init() {
	if File_timetracking_shared_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_timetracking_shared_proto_rawDesc), len(file_timetracking_shared_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_timetracking_shared_proto_goTypes,
		DependencyIndexes: file_timetracking_shared_proto_depIdxs,
		EnumInfos:         file_timetracking_shared_proto_enumTypes,
		MessageInfos:      file_timetracking_shared_proto_msgTypes,
	}.Build()
	File_timetracking_shared_proto = out.File
	file_timetracking_shared_proto_goTypes = nil
	file_timetracking_shared_proto_depIdxs = nil
}
