// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: timetracking/time_tracking_service.proto

package timetracking

import (
	common "github.com/ngdangkietswe/swe-protobuf-shared/generated/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckInOutReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckInOutReq) Reset() {
	*x = CheckInOutReq{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckInOutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInOutReq) ProtoMessage() {}

func (x *CheckInOutReq) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInOutReq.ProtoReflect.Descriptor instead.
func (*CheckInOutReq) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckInOutReq) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckInOutReq) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type CheckInOutResp struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Resp:
	//
	//	*CheckInOutResp_Data_
	//	*CheckInOutResp_Error
	Resp          isCheckInOutResp_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckInOutResp) Reset() {
	*x = CheckInOutResp{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckInOutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInOutResp) ProtoMessage() {}

func (x *CheckInOutResp) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInOutResp.ProtoReflect.Descriptor instead.
func (*CheckInOutResp) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckInOutResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CheckInOutResp) GetResp() isCheckInOutResp_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *CheckInOutResp) GetData() *CheckInOutResp_Data {
	if x != nil {
		if x, ok := x.Resp.(*CheckInOutResp_Data_); ok {
			return x.Data
		}
	}
	return nil
}

func (x *CheckInOutResp) GetError() *common.Error {
	if x != nil {
		if x, ok := x.Resp.(*CheckInOutResp_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isCheckInOutResp_Resp interface {
	isCheckInOutResp_Resp()
}

type CheckInOutResp_Data_ struct {
	Data *CheckInOutResp_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type CheckInOutResp_Error struct {
	Error *common.Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*CheckInOutResp_Data_) isCheckInOutResp_Resp() {}

func (*CheckInOutResp_Error) isCheckInOutResp_Resp() {}

type GetTimeTrackingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"` // default to current user
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimeTrackingReq) Reset() {
	*x = GetTimeTrackingReq{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimeTrackingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeTrackingReq) ProtoMessage() {}

func (x *GetTimeTrackingReq) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeTrackingReq.ProtoReflect.Descriptor instead.
func (*GetTimeTrackingReq) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetTimeTrackingReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTimeTrackingReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

type GetTimeTrackingResp struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Resp:
	//
	//	*GetTimeTrackingResp_TimeTracking
	//	*GetTimeTrackingResp_Error
	Resp          isGetTimeTrackingResp_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimeTrackingResp) Reset() {
	*x = GetTimeTrackingResp{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimeTrackingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeTrackingResp) ProtoMessage() {}

func (x *GetTimeTrackingResp) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeTrackingResp.ProtoReflect.Descriptor instead.
func (*GetTimeTrackingResp) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetTimeTrackingResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTimeTrackingResp) GetResp() isGetTimeTrackingResp_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *GetTimeTrackingResp) GetTimeTracking() *TimeTracking {
	if x != nil {
		if x, ok := x.Resp.(*GetTimeTrackingResp_TimeTracking); ok {
			return x.TimeTracking
		}
	}
	return nil
}

func (x *GetTimeTrackingResp) GetError() *common.Error {
	if x != nil {
		if x, ok := x.Resp.(*GetTimeTrackingResp_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetTimeTrackingResp_Resp interface {
	isGetTimeTrackingResp_Resp()
}

type GetTimeTrackingResp_TimeTracking struct {
	TimeTracking *TimeTracking `protobuf:"bytes,2,opt,name=time_tracking,json=timeTracking,proto3,oneof"`
}

type GetTimeTrackingResp_Error struct {
	Error *common.Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*GetTimeTrackingResp_TimeTracking) isGetTimeTrackingResp_Resp() {}

func (*GetTimeTrackingResp_Error) isGetTimeTrackingResp_Resp() {}

type GetListTimeTrackingReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        *string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`                         // default to current user
	StartDate     string                 `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`                      // YYYY-MM-DD
	EndDate       string                 `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                            // YYYY-MM-DD
	Status        *TimeTrackingStatus    `protobuf:"varint,4,opt,name=status,proto3,enum=timetracking.TimeTrackingStatus,oneof" json:"status,omitempty"` // default to STATUS_UNSPECIFIED
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTimeTrackingReq) Reset() {
	*x = GetListTimeTrackingReq{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTimeTrackingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTimeTrackingReq) ProtoMessage() {}

func (x *GetListTimeTrackingReq) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTimeTrackingReq.ProtoReflect.Descriptor instead.
func (*GetListTimeTrackingReq) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetListTimeTrackingReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetListTimeTrackingReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetListTimeTrackingReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetListTimeTrackingReq) GetStatus() TimeTrackingStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return TimeTrackingStatus_STATUS_UNSPECIFIED
}

type GetListTimeTrackingResp struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to Resp:
	//
	//	*GetListTimeTrackingResp_Data_
	//	*GetListTimeTrackingResp_Error
	Resp          isGetListTimeTrackingResp_Resp `protobuf_oneof:"resp"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTimeTrackingResp) Reset() {
	*x = GetListTimeTrackingResp{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTimeTrackingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTimeTrackingResp) ProtoMessage() {}

func (x *GetListTimeTrackingResp) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTimeTrackingResp.ProtoReflect.Descriptor instead.
func (*GetListTimeTrackingResp) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetListTimeTrackingResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetListTimeTrackingResp) GetResp() isGetListTimeTrackingResp_Resp {
	if x != nil {
		return x.Resp
	}
	return nil
}

func (x *GetListTimeTrackingResp) GetData() *GetListTimeTrackingResp_Data {
	if x != nil {
		if x, ok := x.Resp.(*GetListTimeTrackingResp_Data_); ok {
			return x.Data
		}
	}
	return nil
}

func (x *GetListTimeTrackingResp) GetError() *common.Error {
	if x != nil {
		if x, ok := x.Resp.(*GetListTimeTrackingResp_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isGetListTimeTrackingResp_Resp interface {
	isGetListTimeTrackingResp_Resp()
}

type GetListTimeTrackingResp_Data_ struct {
	Data *GetListTimeTrackingResp_Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type GetListTimeTrackingResp_Error struct {
	Error *common.Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*GetListTimeTrackingResp_Data_) isGetListTimeTrackingResp_Resp() {}

func (*GetListTimeTrackingResp_Error) isGetListTimeTrackingResp_Resp() {}

type OverTimeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        *string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"` // default to current user
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                             // time tracking id
	OvertimeHours float64                `protobuf:"fixed64,3,opt,name=overtime_hours,json=overtimeHours,proto3" json:"overtime_hours,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	ApproverId    string                 `protobuf:"bytes,5,opt,name=approver_id,json=approverId,proto3" json:"approver_id,omitempty"` // use for send notification to approver
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OverTimeReq) Reset() {
	*x = OverTimeReq{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverTimeReq) ProtoMessage() {}

func (x *OverTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverTimeReq.ProtoReflect.Descriptor instead.
func (*OverTimeReq) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{6}
}

func (x *OverTimeReq) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *OverTimeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OverTimeReq) GetOvertimeHours() float64 {
	if x != nil {
		return x.OvertimeHours
	}
	return 0
}

func (x *OverTimeReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *OverTimeReq) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

type ApproveOvertimeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // time tracking id
	IsApproved    bool                   `protobuf:"varint,2,opt,name=is_approved,json=isApproved,proto3" json:"is_approved,omitempty"`
	OvertimeHours float64                `protobuf:"fixed64,3,opt,name=overtime_hours,json=overtimeHours,proto3" json:"overtime_hours,omitempty"`
	Reason        *string                `protobuf:"bytes,4,opt,name=reason,proto3,oneof" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveOvertimeReq) Reset() {
	*x = ApproveOvertimeReq{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveOvertimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOvertimeReq) ProtoMessage() {}

func (x *ApproveOvertimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOvertimeReq.ProtoReflect.Descriptor instead.
func (*ApproveOvertimeReq) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{7}
}

func (x *ApproveOvertimeReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveOvertimeReq) GetIsApproved() bool {
	if x != nil {
		return x.IsApproved
	}
	return false
}

func (x *ApproveOvertimeReq) GetOvertimeHours() float64 {
	if x != nil {
		return x.OvertimeHours
	}
	return 0
}

func (x *ApproveOvertimeReq) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type CheckInOutResp_Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`                                       // YYYY-MM-DD
	CheckInTime   string                 `protobuf:"bytes,3,opt,name=check_in_time,json=checkInTime,proto3" json:"check_in_time,omitempty"`    // HH:mm:ss
	CheckOutTime  string                 `protobuf:"bytes,4,opt,name=check_out_time,json=checkOutTime,proto3" json:"check_out_time,omitempty"` // HH:mm:ss
	Status        TimeTrackingStatus     `protobuf:"varint,5,opt,name=status,proto3,enum=timetracking.TimeTrackingStatus" json:"status,omitempty"`
	Location      string                 `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckInOutResp_Data) Reset() {
	*x = CheckInOutResp_Data{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckInOutResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckInOutResp_Data) ProtoMessage() {}

func (x *CheckInOutResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckInOutResp_Data.ProtoReflect.Descriptor instead.
func (*CheckInOutResp_Data) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CheckInOutResp_Data) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckInOutResp_Data) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CheckInOutResp_Data) GetCheckInTime() string {
	if x != nil {
		return x.CheckInTime
	}
	return ""
}

func (x *CheckInOutResp_Data) GetCheckOutTime() string {
	if x != nil {
		return x.CheckOutTime
	}
	return ""
}

func (x *CheckInOutResp_Data) GetStatus() TimeTrackingStatus {
	if x != nil {
		return x.Status
	}
	return TimeTrackingStatus_STATUS_UNSPECIFIED
}

func (x *CheckInOutResp_Data) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type GetListTimeTrackingResp_Data struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeTrackings []*TimeTracking        `protobuf:"bytes,1,rep,name=time_trackings,json=timeTrackings,proto3" json:"time_trackings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListTimeTrackingResp_Data) Reset() {
	*x = GetListTimeTrackingResp_Data{}
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListTimeTrackingResp_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTimeTrackingResp_Data) ProtoMessage() {}

func (x *GetListTimeTrackingResp_Data) ProtoReflect() protoreflect.Message {
	mi := &file_timetracking_time_tracking_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTimeTrackingResp_Data.ProtoReflect.Descriptor instead.
func (*GetListTimeTrackingResp_Data) Descriptor() ([]byte, []int) {
	return file_timetracking_time_tracking_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetListTimeTrackingResp_Data) GetTimeTrackings() []*TimeTracking {
	if x != nil {
		return x.TimeTrackings
	}
	return nil
}

var File_timetracking_time_tracking_service_proto protoreflect.FileDescriptor

const file_timetracking_time_tracking_service_proto_rawDesc = "" +
	"\n" +
	"(timetracking/time_tracking_service.proto\x12\ftimetracking\x1a\x1cgoogle/api/annotations.proto\x1a\x13common/shared.proto\x1a\x19timetracking/shared.proto\"I\n" +
	"\rCheckInOutReq\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\"\xdf\x02\n" +
	"\x0eCheckInOutResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x127\n" +
	"\x04data\x18\x02 \x01(\v2!.timetracking.CheckInOutResp.DataH\x00R\x04data\x12%\n" +
	"\x05error\x18\x03 \x01(\v2\r.common.ErrorH\x00R\x05error\x1a\xca\x01\n" +
	"\x04Data\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\x12\"\n" +
	"\rcheck_in_time\x18\x03 \x01(\tR\vcheckInTime\x12$\n" +
	"\x0echeck_out_time\x18\x04 \x01(\tR\fcheckOutTime\x128\n" +
	"\x06status\x18\x05 \x01(\x0e2 .timetracking.TimeTrackingStatusR\x06status\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocationB\x06\n" +
	"\x04resp\"N\n" +
	"\x12GetTimeTrackingReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_id\"\xa1\x01\n" +
	"\x13GetTimeTrackingResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12A\n" +
	"\rtime_tracking\x18\x02 \x01(\v2\x1a.timetracking.TimeTrackingH\x00R\ftimeTracking\x12%\n" +
	"\x05error\x18\x03 \x01(\v2\r.common.ErrorH\x00R\x05errorB\x06\n" +
	"\x04resp\"\xc6\x01\n" +
	"\x16GetListTimeTrackingReq\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\tH\x00R\x06userId\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x03 \x01(\tR\aendDate\x12=\n" +
	"\x06status\x18\x04 \x01(\x0e2 .timetracking.TimeTrackingStatusH\x01R\x06status\x88\x01\x01B\n" +
	"\n" +
	"\b_user_idB\t\n" +
	"\a_status\"\xef\x01\n" +
	"\x17GetListTimeTrackingResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12@\n" +
	"\x04data\x18\x02 \x01(\v2*.timetracking.GetListTimeTrackingResp.DataH\x00R\x04data\x12%\n" +
	"\x05error\x18\x03 \x01(\v2\r.common.ErrorH\x00R\x05error\x1aI\n" +
	"\x04Data\x12A\n" +
	"\x0etime_trackings\x18\x01 \x03(\v2\x1a.timetracking.TimeTrackingR\rtimeTrackingsB\x06\n" +
	"\x04resp\"\xa7\x01\n" +
	"\vOverTimeReq\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\tH\x00R\x06userId\x88\x01\x01\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12%\n" +
	"\x0eovertime_hours\x18\x03 \x01(\x01R\rovertimeHours\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x1f\n" +
	"\vapprover_id\x18\x05 \x01(\tR\n" +
	"approverIdB\n" +
	"\n" +
	"\b_user_id\"\x94\x01\n" +
	"\x12ApproveOvertimeReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vis_approved\x18\x02 \x01(\bR\n" +
	"isApproved\x12%\n" +
	"\x0eovertime_hours\x18\x03 \x01(\x01R\rovertimeHours\x12\x1b\n" +
	"\x06reason\x18\x04 \x01(\tH\x00R\x06reason\x88\x01\x01B\t\n" +
	"\a_reason2\xfd\x04\n" +
	"\x13TimeTrackingService\x12w\n" +
	"\n" +
	"CheckInOut\x12\x1b.timetracking.CheckInOutReq\x1a\x1c.timetracking.CheckInOutResp\".\x82\xd3\xe4\x93\x02(:\x01*\"#/api/v1/time-trackings/check-in-out\x12{\n" +
	"\x0fGetTimeTracking\x12 .timetracking.GetTimeTrackingReq\x1a!.timetracking.GetTimeTrackingResp\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v1/time-trackings/{id}\x12\x82\x01\n" +
	"\x13GetListTimeTracking\x12$.timetracking.GetListTimeTrackingReq\x1a%.timetracking.GetListTimeTrackingResp\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/api/v1/time-trackings\x12j\n" +
	"\bOvertime\x12\x19.timetracking.OverTimeReq\x1a\x12.common.UpsertResp\"/\x82\xd3\xe4\x93\x02):\x01*\"$/api/v1/time-trackings/{id}/overtime\x12\x7f\n" +
	"\x0fApproveOvertime\x12 .timetracking.ApproveOvertimeReq\x1a\x11.common.EmptyResp\"7\x82\xd3\xe4\x93\x021:\x01*\",/api/v1/time-trackings/{id}/overtime/approveB\xc1\x01\n" +
	"\x10com.timetrackingB\x18TimeTrackingServiceProtoP\x01ZCgithub.com/ngdangkietswe/swe-protobuf-shared/generated/timetracking\xa2\x02\x03TXX\xaa\x02\fTimetracking\xca\x02\fTimetracking\xe2\x02\x18Timetracking\\GPBMetadata\xea\x02\fTimetrackingb\x06proto3"

var (
	file_timetracking_time_tracking_service_proto_rawDescOnce sync.Once
	file_timetracking_time_tracking_service_proto_rawDescData []byte
)

func file_timetracking_time_tracking_service_proto_rawDescGZIP() []byte {
	file_timetracking_time_tracking_service_proto_rawDescOnce.Do(func() {
		file_timetracking_time_tracking_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_timetracking_time_tracking_service_proto_rawDesc), len(file_timetracking_time_tracking_service_proto_rawDesc)))
	})
	return file_timetracking_time_tracking_service_proto_rawDescData
}

var file_timetracking_time_tracking_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_timetracking_time_tracking_service_proto_goTypes = []any{
	(*CheckInOutReq)(nil),                // 0: timetracking.CheckInOutReq
	(*CheckInOutResp)(nil),               // 1: timetracking.CheckInOutResp
	(*GetTimeTrackingReq)(nil),           // 2: timetracking.GetTimeTrackingReq
	(*GetTimeTrackingResp)(nil),          // 3: timetracking.GetTimeTrackingResp
	(*GetListTimeTrackingReq)(nil),       // 4: timetracking.GetListTimeTrackingReq
	(*GetListTimeTrackingResp)(nil),      // 5: timetracking.GetListTimeTrackingResp
	(*OverTimeReq)(nil),                  // 6: timetracking.OverTimeReq
	(*ApproveOvertimeReq)(nil),           // 7: timetracking.ApproveOvertimeReq
	(*CheckInOutResp_Data)(nil),          // 8: timetracking.CheckInOutResp.Data
	(*GetListTimeTrackingResp_Data)(nil), // 9: timetracking.GetListTimeTrackingResp.Data
	(*common.Error)(nil),                 // 10: common.Error
	(*TimeTracking)(nil),                 // 11: timetracking.TimeTracking
	(TimeTrackingStatus)(0),              // 12: timetracking.TimeTrackingStatus
	(*common.UpsertResp)(nil),            // 13: common.UpsertResp
	(*common.EmptyResp)(nil),             // 14: common.EmptyResp
}
var file_timetracking_time_tracking_service_proto_depIdxs = []int32{
	8,  // 0: timetracking.CheckInOutResp.data:type_name -> timetracking.CheckInOutResp.Data
	10, // 1: timetracking.CheckInOutResp.error:type_name -> common.Error
	11, // 2: timetracking.GetTimeTrackingResp.time_tracking:type_name -> timetracking.TimeTracking
	10, // 3: timetracking.GetTimeTrackingResp.error:type_name -> common.Error
	12, // 4: timetracking.GetListTimeTrackingReq.status:type_name -> timetracking.TimeTrackingStatus
	9,  // 5: timetracking.GetListTimeTrackingResp.data:type_name -> timetracking.GetListTimeTrackingResp.Data
	10, // 6: timetracking.GetListTimeTrackingResp.error:type_name -> common.Error
	12, // 7: timetracking.CheckInOutResp.Data.status:type_name -> timetracking.TimeTrackingStatus
	11, // 8: timetracking.GetListTimeTrackingResp.Data.time_trackings:type_name -> timetracking.TimeTracking
	0,  // 9: timetracking.TimeTrackingService.CheckInOut:input_type -> timetracking.CheckInOutReq
	2,  // 10: timetracking.TimeTrackingService.GetTimeTracking:input_type -> timetracking.GetTimeTrackingReq
	4,  // 11: timetracking.TimeTrackingService.GetListTimeTracking:input_type -> timetracking.GetListTimeTrackingReq
	6,  // 12: timetracking.TimeTrackingService.Overtime:input_type -> timetracking.OverTimeReq
	7,  // 13: timetracking.TimeTrackingService.ApproveOvertime:input_type -> timetracking.ApproveOvertimeReq
	1,  // 14: timetracking.TimeTrackingService.CheckInOut:output_type -> timetracking.CheckInOutResp
	3,  // 15: timetracking.TimeTrackingService.GetTimeTracking:output_type -> timetracking.GetTimeTrackingResp
	5,  // 16: timetracking.TimeTrackingService.GetListTimeTracking:output_type -> timetracking.GetListTimeTrackingResp
	13, // 17: timetracking.TimeTrackingService.Overtime:output_type -> common.UpsertResp
	14, // 18: timetracking.TimeTrackingService.ApproveOvertime:output_type -> common.EmptyResp
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_timetracking_time_tracking_service_proto_init() }
func file_timetracking_time_tracking_service_proto_init() {
	if File_timetracking_time_tracking_service_proto != nil {
		return
	}
	file_timetracking_shared_proto_init()
	file_timetracking_time_tracking_service_proto_msgTypes[1].OneofWrappers = []any{
		(*CheckInOutResp_Data_)(nil),
		(*CheckInOutResp_Error)(nil),
	}
	file_timetracking_time_tracking_service_proto_msgTypes[2].OneofWrappers = []any{}
	file_timetracking_time_tracking_service_proto_msgTypes[3].OneofWrappers = []any{
		(*GetTimeTrackingResp_TimeTracking)(nil),
		(*GetTimeTrackingResp_Error)(nil),
	}
	file_timetracking_time_tracking_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_timetracking_time_tracking_service_proto_msgTypes[5].OneofWrappers = []any{
		(*GetListTimeTrackingResp_Data_)(nil),
		(*GetListTimeTrackingResp_Error)(nil),
	}
	file_timetracking_time_tracking_service_proto_msgTypes[6].OneofWrappers = []any{}
	file_timetracking_time_tracking_service_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_timetracking_time_tracking_service_proto_rawDesc), len(file_timetracking_time_tracking_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timetracking_time_tracking_service_proto_goTypes,
		DependencyIndexes: file_timetracking_time_tracking_service_proto_depIdxs,
		MessageInfos:      file_timetracking_time_tracking_service_proto_msgTypes,
	}.Build()
	File_timetracking_time_tracking_service_proto = out.File
	file_timetracking_time_tracking_service_proto_goTypes = nil
	file_timetracking_time_tracking_service_proto_depIdxs = nil
}
