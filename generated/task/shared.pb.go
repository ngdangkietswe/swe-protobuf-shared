// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: task/shared.proto

package task

import (
	common "github.com/ngdangkietswe/swe-protobuf-shared/generated/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_OPEN        Status = 1
	Status_STATUS_IN_PROGRESS Status = 2
	Status_STATUS_IN_REVIEW   Status = 3
	Status_STATUS_DONE        Status = 4
	Status_STATUS_CANCELED    Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_OPEN",
		2: "STATUS_IN_PROGRESS",
		3: "STATUS_IN_REVIEW",
		4: "STATUS_DONE",
		5: "STATUS_CANCELED",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_OPEN":        1,
		"STATUS_IN_PROGRESS": 2,
		"STATUS_IN_REVIEW":   3,
		"STATUS_DONE":        4,
		"STATUS_CANCELED":    5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_task_shared_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_task_shared_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_task_shared_proto_rawDescGZIP(), []int{0}
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        Status                 `protobuf:"varint,4,opt,name=status,proto3,enum=task.Status" json:"status,omitempty"`
	Reporter      *common.User           `protobuf:"bytes,5,opt,name=reporter,proto3" json:"reporter,omitempty"`
	Assignee      *common.User           `protobuf:"bytes,6,opt,name=assignee,proto3" json:"assignee,omitempty"`
	Audit         *common.Audit          `protobuf:"bytes,7,opt,name=audit,proto3" json:"audit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_task_shared_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_task_shared_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_task_shared_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Task) GetReporter() *common.User {
	if x != nil {
		return x.Reporter
	}
	return nil
}

func (x *Task) GetAssignee() *common.User {
	if x != nil {
		return x.Assignee
	}
	return nil
}

func (x *Task) GetAudit() *common.Audit {
	if x != nil {
		return x.Audit
	}
	return nil
}

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Task          *Comment_Task          `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Parent        *Comment               `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	Children      []*Comment             `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`
	Audit         *common.Audit          `protobuf:"bytes,6,opt,name=audit,proto3" json:"audit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_task_shared_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_task_shared_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_task_shared_proto_rawDescGZIP(), []int{1}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetTask() *Comment_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Comment) GetParent() *Comment {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Comment) GetChildren() []*Comment {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Comment) GetAudit() *common.Audit {
	if x != nil {
		return x.Audit
	}
	return nil
}

type Comment_Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment_Task) Reset() {
	*x = Comment_Task{}
	mi := &file_task_shared_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment_Task) ProtoMessage() {}

func (x *Comment_Task) ProtoReflect() protoreflect.Message {
	mi := &file_task_shared_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment_Task.ProtoReflect.Descriptor instead.
func (*Comment_Task) Descriptor() ([]byte, []int) {
	return file_task_shared_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Comment_Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment_Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

var File_task_shared_proto protoreflect.FileDescriptor

const file_task_shared_proto_rawDesc = "" +
	"\n" +
	"\x11task/shared.proto\x12\x04task\x1a\x13common/shared.proto\"\xed\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12$\n" +
	"\x06status\x18\x04 \x01(\x0e2\f.task.StatusR\x06status\x12(\n" +
	"\breporter\x18\x05 \x01(\v2\f.common.UserR\breporter\x12(\n" +
	"\bassignee\x18\x06 \x01(\v2\f.common.UserR\bassignee\x12#\n" +
	"\x05audit\x18\a \x01(\v2\r.common.AuditR\x05audit\"\x80\x02\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12&\n" +
	"\x04task\x18\x03 \x01(\v2\x12.task.Comment.TaskR\x04task\x12%\n" +
	"\x06parent\x18\x04 \x01(\v2\r.task.CommentR\x06parent\x12)\n" +
	"\bchildren\x18\x05 \x03(\v2\r.task.CommentR\bchildren\x12#\n" +
	"\x05audit\x18\x06 \x01(\v2\r.common.AuditR\x05audit\x1a,\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title*\x85\x01\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vSTATUS_OPEN\x10\x01\x12\x16\n" +
	"\x12STATUS_IN_PROGRESS\x10\x02\x12\x14\n" +
	"\x10STATUS_IN_REVIEW\x10\x03\x12\x0f\n" +
	"\vSTATUS_DONE\x10\x04\x12\x13\n" +
	"\x0fSTATUS_CANCELED\x10\x05B\x84\x01\n" +
	"\bcom.taskB\vSharedProtoP\x01Z;github.com/ngdangkietswe/swe-protobuf-shared/generated/task\xa2\x02\x03TXX\xaa\x02\x04Task\xca\x02\x04Task\xe2\x02\x10Task\\GPBMetadata\xea\x02\x04Taskb\x06proto3"

var (
	file_task_shared_proto_rawDescOnce sync.Once
	file_task_shared_proto_rawDescData []byte
)

func file_task_shared_proto_rawDescGZIP() []byte {
	file_task_shared_proto_rawDescOnce.Do(func() {
		file_task_shared_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_shared_proto_rawDesc), len(file_task_shared_proto_rawDesc)))
	})
	return file_task_shared_proto_rawDescData
}

var file_task_shared_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_task_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_task_shared_proto_goTypes = []any{
	(Status)(0),          // 0: task.Status
	(*Task)(nil),         // 1: task.Task
	(*Comment)(nil),      // 2: task.Comment
	(*Comment_Task)(nil), // 3: task.Comment.Task
	(*common.User)(nil),  // 4: common.User
	(*common.Audit)(nil), // 5: common.Audit
}
var file_task_shared_proto_depIdxs = []int32{
	0, // 0: task.Task.status:type_name -> task.Status
	4, // 1: task.Task.reporter:type_name -> common.User
	4, // 2: task.Task.assignee:type_name -> common.User
	5, // 3: task.Task.audit:type_name -> common.Audit
	3, // 4: task.Comment.task:type_name -> task.Comment.Task
	2, // 5: task.Comment.parent:type_name -> task.Comment
	2, // 6: task.Comment.children:type_name -> task.Comment
	5, // 7: task.Comment.audit:type_name -> common.Audit
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_task_shared_proto_init() }
func file_task_shared_proto_init() {
	if File_task_shared_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_shared_proto_rawDesc), len(file_task_shared_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_shared_proto_goTypes,
		DependencyIndexes: file_task_shared_proto_depIdxs,
		EnumInfos:         file_task_shared_proto_enumTypes,
		MessageInfos:      file_task_shared_proto_msgTypes,
	}.Build()
	File_task_shared_proto = out.File
	file_task_shared_proto_goTypes = nil
	file_task_shared_proto_depIdxs = nil
}
